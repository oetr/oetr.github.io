#+STARTUP: overview
#+COLUMNS: %80ITEM  %7CLOCKSUM(Clocked) %5TODO(State)
#+TITLE:   Fun with Turtle Geometry
#+AUTHOR:  Peter Samarin
#+DATE:    8 June 2018
#+EMAIL:   peter.samarin@gmail.com
#+DESCRIPTION: 
#+KEYWORDS:    
#+LANGUAGE:    en
#+OPTIONS: H:3 num:nil toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS: TeX:t LaTeX:t skip:nil d:t todo:nil pri:nil
#+OPTIONS: tags:not-in-toc
#+OPTIONS: creator:nil author:nil email:nil date:nil title:nil html-style:nil html-scripts:nil timestamp:nil
#+OPTIONS: tex:dvisvgm
#+BIND: org-latex-image-default-width nil

#+HTML_HEAD_EXTRA: <link href="/css/code.css" rel="stylesheet">

/Turtle Geometry/ cite:Abelson1980Turtlegeometry is an excellent book that shows how far one can get with a little coding.
I wrote a small [[file:../src/Racket/turtle/turtle-graphics.rkt][library]] in Racket that can run all 2d code examples from the book without much conversion.

#+begin_src racket :exports code
  #lang racket
  (require "../src/Racket/turtle/turtle-graphics.rkt")
#+end_src

#+begin_src racket :session *Racket* :exports none
  (require "../src/Racket/turtle/turtle-graphics.rkt")  
#+end_src

#+HTML: <table border="0px solid black">
#+HTML: <tr>
#+HTML: <td valign="top">
#+begin_src racket :session *Racket* :exports both :results raw :file ../images/turtle/first-turtle0.png
  (clear 1000 1000)
  (forward 100)
  (turn 90)
  (forward 150)
  (turn -45)
  (back 100)
  (turn -45)
  (penup)
  (forward 100)
  (show)
#+end_src
#+HTML: </td>


#+HTML: <td valign="top">
#+begin_src racket :session *Racket* :exports both :results raw :file ../images/turtle/first-turtle1.png
  (clear 1000 1000)

  (define (arcr r deg)
    (for ([i deg])
      (forward r)
      (turn 1)))

  (define (circles n)
    (for ([i n])
      (arcr 1 360)
      (turn 40)))

  (circles 9)

  (show)
#+end_src
#+HTML: </td>


#+HTML: <td valign="top">
#+begin_src racket :session *Racket* :exports both :results raw :file ../images/turtle/first-turtle2.png
  (clear 1000 1000)

  (define (poly side angle steps)
    (for ([step steps])
      (forward side)
      (turn angle)))

  (poly 100 72 10)

  (show)
#+end_src
#+HTML: </td>
#+HTML: </tr>
#+HTML: </table>



#+HTML: <table border="0px solid black">
#+HTML: <tr>
#+HTML: <td valign="top">
#+begin_src racket :session *Racket* :exports both :results raw :file ../images/turtle/first-turtle21.png
  (clear 1000 1000)
  (poly 100 60 10)
  (show)
#+end_src
#+HTML: </td>


#+HTML: <td valign="top">
#+begin_src racket :session *Racket* :exports both :results raw :file ../images/turtle/first-turtle22.png
  (clear 1000 1000)
  (poly 50 18 20)
  (show)
#+end_src
#+HTML: </td>
#+HTML: </tr>
#+HTML: </table>


#+HTML: <table border="0px solid black">
#+HTML: <tr>
#+HTML: <td valign="top">
#+begin_src racket :session *Racket* :exports both :results raw :file ../images/turtle/first-turtle3.png
  (clear 1000 1000)

  (define (newpoly side angle steps)
    (for ([step steps])
      (forward side)
      (turn angle)
      (forward side)
      (turn (* 2 angle))))

  (newpoly 100 72 5)
  (show)
#+end_src
#+HTML: </td>


#+HTML: <td valign="top">
#+begin_src racket :session *Racket* :exports both :results raw :file ../images/turtle/first-turtle4.png
  (clear 1000 1000)
  (poly 100 121 20)
  (show)
#+end_src
#+HTML: </td>
#+HTML: </tr>
#+HTML: </table>


#+HTML: <table>
#+HTML: <tr>
#+HTML: <td valign="top">
#+begin_src racket :session *Racket* :exports both :results raw :file ../images/turtle/first-turtle5.png
  (clear 1000 1000)

  (define (polyspi side angle steps)
    (when (>= steps 1)
      (forward side)
      (turn angle)
      (polyspi (+ side 2) angle (- steps 1))))

  (polyspi 10 95 100)
  (show)
#+end_src
#+HTML: </td>

#+HTML: <td valign="top">
#+begin_src racket :session *Racket* :exports both :results raw :file ../images/turtle/first-turtle6.png
  (clear 1000 1000)
  (polyspi 10 70 100)
  (show)
#+end_src

#+RESULTS:
[[../images/turtle/first-turtle6.png]]

#+HTML: </td>
#+HTML: </tr>

#+HTML: </table>

#+BIBLIOGRAPHY: ../bib/references plain limit:t option:-a option:-unicode option:-html-entities option:-nobibsource option:-nokeywords

#+HTML: <br><div class='footer'><a href="https://peter-samarin.de">Peter Samarin</a></div>

* Random Walk                                                      :noexport:
TODOS: 
- resize canvas automatically, simplify examples
- trader turtles
- robot turtles
- growing turtles



* LATEX HEADER                                                     :noexport:
#+LaTeX_CLASS: org-article
#+LaTeX_CLASS_OPTIONS: [koma,a4paper,12pt,microtype,paralist,nofloat,colorlinks=true,linkcolor=gray,urlcolor=blue,citecolor=blue]
# FONT: Charter combined with Bera->replaced with inconsolata (first 2 from charter, one from bera)
# Packages
#+LATEX_HEADER: \usepackage[ngerman, num]{isodate}
#+LATEX_HEADER: \usepackage[utf8x]{inputenc}
#+LATEX_HEADER: \usepackage[ngerman]{babel} % this is needed for umlauts
#+LaTeX_HEADER: \usepackage[T1]{fontenc} 
#+LaTeX_HEADER: \usepackage[bitstream-charter]{mathdesign}
#+LaTeX_HEADER: \usepackage[scaled=.9]{helvet}
#+LaTeX_HEADER: \usepackage[scaled]{beramono}
#+LaTeX_HEADER: \usepackage{inconsolata}
#+LaTeX_HEADER: \usepackage[export]{adjustbox}

#+LATEX_HEADER: \usepackage[round]{natbib}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage[nottoc]{tocbibind}
#+LaTeX_HEADER: \usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
#+LaTeX_HEADER: \definecolor{webgreen}{rgb}{0,.5,0}
#+LATEX_HEADER: \usepackage{setspace}
#+LATEX_HEADER: \onehalfspacing
#+LATEX_HEADER: \pagestyle{empty}

#+LaTeX_HEADER: \usepackage{longtable}
#+LaTeX_HEADER: \usepackage{indentfirst}
#+LaTeX_HEADER: \usepackage{float}
#+LATEX_HEADER: \usepackage{subfigure}
#+LaTeX_HEADER: \usepackage[format=plain,font=small]{caption}
#+LaTeX_HEADER: \usepackage[german,capitalise]{cleveref} % Has to be loaded after hyperref

# Make listings copyable
#+LaTeX_HEADER: \usepackage{listings}
#+LaTeX_HEADER: \definecolor{light-gray}{gray}{0.93}
#+LaTeX_HEADER: \definecolor{bluekeywords}{rgb}{0.13,0.13,1}
#+LaTeX_HEADER: \definecolor{greencomments}{rgb}{0,0.5,0}
#+LaTeX_HEADER: \definecolor{redstrings}{rgb}{0.9,0,0}

#+LATEX_HEADER: \lstset{keepspaces=false,
#+LATEX_HEADER: basicstyle=\footnotesize\ttfamily,
#+LATEX_HEADER: frame=L,
#+LATEX_HEADER: backgroundcolor=\color{light-gray},
#+LATEX_HEADER: extendedchars=true,
#+LATEX_HEADER: upquote=true,
#+LATEX_HEADER: showspaces=true,
#+LATEX_HEADER: showtabs=true,
#+LATEX_HEADER: breaklines=true,
#+LATEX_HEADER: showstringspaces=true,
#+LATEX_HEADER: breakatwhitespace=true, 
#+LATEX_HEADER: numbers=left,numberstyle=\tiny\color{gray},numbersep=10pt,stepnumber=1,firstnumber=1,numberfirstline=false,
#+LATEX_HEADER: keywordstyle=\color{bluekeywords},
#+LATEX_HEADER: stringstyle=\color{redstrings},
#+LATEX_HEADER: commentstyle=\color{greencomments},
#+LATEX_HEADER: literate={*}{{\char42}}1
#+LATEX_HEADER:          {\ }{{\copyablespace}}1}


#+LATEX_HEADER: \usepackage[space=true]{accsupp}
#+LATEX_HEADER: \newcommand{\copyablespace}{\BeginAccSupp{method=hex,unicode,ActualText=00A0}\ \EndAccSupp{}}

#+LATEX_HEADER: \usepackage{ifthen} % Allows the user of the \ifthenelse command
#+LATEX_HEADER: \newboolean{enable-backrefs} % Variable to enable backrefs in the bibliography
#+LATEX_HEADER: \setboolean{enable-backrefs}{false} % Variable value: true or false

#+LATEX_HEADER: \newcommand{\backrefnotcitedstring}{\relax} % (Not cited.)
#+LATEX_HEADER: \newcommand{\backrefcitedsinglestring}[1]{(cited on p. ~#1)}
#+LATEX_HEADER: \newcommand{\backrefcitedmultistring}[1]{(cited on pp. ~#1.)}
#+LATEX_HEADER: \ifthenelse{\boolean{enable-backrefs}} % If backrefs were enabled
#+LATEX_HEADER: {
#+LATEX_HEADER: \PassOptionsToPackage{hyperpageref}{backref}
#+LATEX_HEADER: \usepackage{backref} % to be loaded after hyperref package 
#+LATEX_HEADER: \renewcommand{\backreftwosep}{, ~} % separate 2 pages
#+LATEX_HEADER: \renewcommand{\backreflastsep}{, ~} % separate last of longer list
#+LATEX_HEADER: \renewcommand*{\backref}[1]{}  % disable standard
#+LATEX_HEADER: \renewcommand*{\backrefalt}[4]{% detailed backref
#+LATEX_HEADER: \ifcase #1 
#+LATEX_HEADER: \backrefnotcitedstring
#+LATEX_HEADER: \or
#+LATEX_HEADER: \backrefcitedsinglestring{#2}
#+LATEX_HEADER: \else
#+LATEX_HEADER: \backrefcitedmultistring{#2}
#+LATEX_HEADER: \fi}
#+LATEX_HEADER: }{\relax}
